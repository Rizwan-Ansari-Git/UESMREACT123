import React, { useEffect, useState } from 'react';
import axios from 'axios';
import { Chart } from 'react-google-charts';
import Button from 'react-bootstrap/Button';
import Modal from 'react-bootstrap/Modal';
import 'bootstrap/dist/css/bootstrap.min.css';
import Api from '../../../../ConfigFile/Api';

const PieChart = () => {
  const [hostOsData, setHostOsData] = useState([]);
  const [recentFiles, setRecentFiles] = useState([]);
  const [showModal, setshowModal] = useState(false);
  const [modalData, setModalData] = useState([]);
  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await Api.get(`/observeMalware/totalScannedFileStatus`);
        const data = response.data.data;

        const formattedData = [['Status', 'Count'],
        ['Completed', data.Successfully],
        ['Pending', data.Pending]];

        setHostOsData(formattedData);
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    };

    fetchData();
  }, []);


  const fetchModalData = async (userName) => {
    try {
      const response = await Api.get(`/observeMalware/pieChartDataModal?status=${userName}`);
      setRecentFiles(response.data.data.Pir_Chart_List);
      setshowModal(true); // Show modal after data is fetched
    } catch (error) {
      console.error('Error fetching modal data:', error);
    }
  };


  const onPieSliceClick = ({ chartWrapper }) => {
    const chart = chartWrapper.getChart();
    const selection = chart.getSelection();
    if (selection.length > 0) {
      const selectedItem = selection[0];
      const dataTable = chartWrapper.getDataTable();
      const userName = dataTable.getValue(selectedItem.row, 0);
      const count = dataTable.getValue(selectedItem.row, 1);
      // alert(`Selected User: ${userName}\nActivity Count: ${count}`);
      fetchModalData(userName); // Fetch and display modal data
    }
  };

  const handleClose = () => setshowModal(false);
  


  const options = {
    title: 'File Status',
    titleTextStyle: {
      fontSize: 18,
      bold: true,
      textAlign: 'center', // Align title in the middle
    },
    pieHole: 0.1,
    is3D: true,
    legend: {
      position: 'bottom', // Position legend at the bottom
      alignment: 'center', // Center align the legend
      textStyle: {
        fontSize: 10, // Adjust label size
      },
    },
  };

  return (
    <div>
      <Chart
        chartType="PieChart"
        width="100%"
        height="160px"
        data={hostOsData}
        options={options}
        chartEvents={[
          {
            eventName: 'select',
            callback: onPieSliceClick,
          },
        ]}
      />

      <Modal show={showModal} onHide={handleClose} size="xl" aria-labelledby="example-modal-sizes-title-xl">
        <Modal.Header closeButton>
          <div className="row" style={{ width: '100%' }}>
            <div className="col-md-4"></div>
            <div className="col-md-4">
              <h4 className="modal-title" style={{ textAlign: 'center' }}>
                Total Scaned Files
              </h4>

            </div>

            <div className="col-md-4"></div>
          </div>
        </Modal.Header>
        <Modal.Body>
          <table className="table table-bordered" id="pending_data" style={{ width: '100%' }}>
            <thead>
              <tr>
                <th>Sr No</th>
                <th>File Name</th>
                <th>File Status</th>
                <th>Connection Time</th>
              </tr>
            </thead>
            <tbody>
              {
                recentFiles.map((file, index) => (
                  <tr key={index + 1}>
                    <td>{index + 1}</td>
                    <td>{file.fileName}</td>
                    <td>{file.fileStatus}</td>
                    <td>{file.ConnectionTime}</td>
                  </tr>
                ))
              }

            </tbody>
          </table>
        </Modal.Body>
        <Modal.Footer>
          <Button variant="secondary" onClick={handleClose}>
            Close
          </Button>
        </Modal.Footer>
      </Modal>
    </div>
  );
};

export default PieChart;
